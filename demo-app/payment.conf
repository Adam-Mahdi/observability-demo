server {
    listen 80;
    server_name payment-service;

    location / {
        return 200 '{"service": "payment", "status": "healthy", "version": "2.3.0"}';
        add_header Content-Type application/json;
    }

    location /api/payment {
        # Simulate random latency and errors
        set $random $msec;
        if ($random ~ [0-2]$) {
            return 500 '{"error": "Payment processing failed"}';
        }
        if ($random ~ [3-4]$) {
            return 200 '{"status": "slow", "latency": "800ms"}';
        }
        return 200 '{"status": "success", "transaction_id": "$request_id"}';
        add_header Content-Type application/json;
    }

    location /metrics {
        return 200 '# HELP payment_requests_total Total payment requests
# TYPE payment_requests_total counter
payment_requests_total{status="success"} 1234
payment_requests_total{status="error"} 42
# HELP payment_latency_seconds Payment processing latency
# TYPE payment_latency_seconds histogram
payment_latency_seconds_bucket{le="0.1"} 1000
payment_latency_seconds_bucket{le="0.5"} 1200
payment_latency_seconds_bucket{le="1.0"} 1234
payment_latency_seconds_bucket{le="+Inf"} 1234
payment_latency_seconds_sum 234.5
payment_latency_seconds_count 1234
';
        add_header Content-Type text/plain;
    }
}
